'use strict';

const formatInt = int =>
  int
    .toString()
    .split('')
    .reverse()
    .join('')
    .match(/[0-9]{1,3}/g)
    .join('.')
    .split('')
    .reverse()
    .join('');

const mainMenu = i18n => [
  [{ text: i18n.t('menus.main.startGame'), callback_data: 'create::false' }],
  [
    { text: i18n.t('menus.main.profile'), callback_data: 'router::profile' },
    { text: i18n.t('menus.main.rating'), callback_data: 'router::rating' },
  ],
  [{ text: i18n.t('menus.main.settings'), callback_data: 'router::settings' }],
];

const settingsMenu = i18n => [
  [{ text: i18n.t('menus.settings.dropStats.title'), callback_data: 'router::drop' }],
  [
    { text: i18n.t('menus.settings.setLanguage'), callback_data: 'router::languages' },
    { text: i18n.t('menus.settings.incognito.title'), callback_data: 'router::incognito' },
  ],
  [{ text: i18n.t('menus.main.back'), callback_data: 'router::main' }],
];

const languagesMenu = [
  [{ text: 'üá∑üá∫ –†—É—Å—Å–∫–∏–π', callback_data: 'language::ru' }],
  [{ text: 'üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞', callback_data: 'language::uk' }],
];

const alphabet = ['–ê', '–ë', '–í', '–ì', '–î', '–ï', '–Ñ', '–ñ', '–ó'];

/**
 * BUG: –ï—Å–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å ./ratingMarkup, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è
 * –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É—Ç–∏–ª–∏—Ç—ã –∏–∑ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
 */

module.exports = {
  alphabet,
  mainMenu,
  languagesMenu,
  settingsMenu,
  skipTask: require('./skipTask'),
  updateDatabase: require('./updateDatabase'),
  getUserStats: require('./getUserStats'),
  checkIncognito: require('./checkIncognito'),
  formatInt,
};
